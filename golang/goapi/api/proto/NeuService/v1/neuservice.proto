syntax="proto3";
package v1;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "google/protobuf/validate.proto";

option go_package = "api/neuservice/v1";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "NeuService";
        version: "0.1";
        contact: {
              name: "github.com/Neudesic/NeuService";
      };
    };
    schemes: HTTP;
    consumes: "application/json";
    produces: "application/json";
    responses: {
        key: "404";
        value: {
            description: "Returned when the resource does not exist.";
            schema: {
                json_schema: {
                    type: STRING;
                }
            }
        }
    }
};

message NeuRequest {
    string inputText = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "inputText", description: "text to be returned in reponse appending Hello"},(validate.rules).string.min_len = 1];
}

message NeuResponse {
    string reponseText = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "responseText", description: "text returned in reponse appending Hello"}];
}

service NeuService {
    
    rpc GetHelloText(NeuRequest) returns (NeuResponse){
        option (google.api.http) = {
            get: "/v1/gethellotext"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "An endpoint used to determine the health of the service."
        };
    };
}
