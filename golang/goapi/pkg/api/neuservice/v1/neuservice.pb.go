// Code generated by protoc-gen-go. DO NOT EDIT.
// source: neuservice.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NeuRequest struct {
	InputText            string   `protobuf:"bytes,1,opt,name=inputText,proto3" json:"inputText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NeuRequest) Reset()         { *m = NeuRequest{} }
func (m *NeuRequest) String() string { return proto.CompactTextString(m) }
func (*NeuRequest) ProtoMessage()    {}
func (*NeuRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_374b7a1e5819f93f, []int{0}
}

func (m *NeuRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NeuRequest.Unmarshal(m, b)
}
func (m *NeuRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NeuRequest.Marshal(b, m, deterministic)
}
func (m *NeuRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NeuRequest.Merge(m, src)
}
func (m *NeuRequest) XXX_Size() int {
	return xxx_messageInfo_NeuRequest.Size(m)
}
func (m *NeuRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NeuRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NeuRequest proto.InternalMessageInfo

func (m *NeuRequest) GetInputText() string {
	if m != nil {
		return m.InputText
	}
	return ""
}

type NeuResponse struct {
	ReponseText          string   `protobuf:"bytes,1,opt,name=reponseText,proto3" json:"reponseText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NeuResponse) Reset()         { *m = NeuResponse{} }
func (m *NeuResponse) String() string { return proto.CompactTextString(m) }
func (*NeuResponse) ProtoMessage()    {}
func (*NeuResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_374b7a1e5819f93f, []int{1}
}

func (m *NeuResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NeuResponse.Unmarshal(m, b)
}
func (m *NeuResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NeuResponse.Marshal(b, m, deterministic)
}
func (m *NeuResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NeuResponse.Merge(m, src)
}
func (m *NeuResponse) XXX_Size() int {
	return xxx_messageInfo_NeuResponse.Size(m)
}
func (m *NeuResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NeuResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NeuResponse proto.InternalMessageInfo

func (m *NeuResponse) GetReponseText() string {
	if m != nil {
		return m.ReponseText
	}
	return ""
}

func init() {
	proto.RegisterType((*NeuRequest)(nil), "v1.NeuRequest")
	proto.RegisterType((*NeuResponse)(nil), "v1.NeuResponse")
}

func init() {
	proto.RegisterFile("neuservice.proto", fileDescriptor_374b7a1e5819f93f)
}

var fileDescriptor_374b7a1e5819f93f = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x6e, 0x13, 0x3d,
	0x10, 0xc7, 0xe5, 0xb4, 0xea, 0xa7, 0xba, 0xd5, 0x47, 0xf0, 0x09, 0x45, 0xa8, 0xb2, 0x72, 0xaa,
	0x22, 0xba, 0xee, 0xa6, 0x39, 0x54, 0xcd, 0x69, 0x23, 0x21, 0x38, 0xf5, 0xb0, 0xc0, 0x05, 0x89,
	0x83, 0xb3, 0x3b, 0xdd, 0x35, 0xda, 0xda, 0xae, 0x3d, 0xde, 0xe6, 0xcc, 0x81, 0x07, 0x08, 0xe2,
	0x00, 0x4f, 0xc1, 0xbb, 0xf0, 0x0a, 0x3c, 0x05, 0x27, 0xb4, 0x4e, 0xca, 0x46, 0x82, 0x03, 0xa7,
	0xd5, 0x78, 0xff, 0x33, 0xbf, 0x99, 0xff, 0x0c, 0x1d, 0x6a, 0x08, 0x1e, 0x5c, 0xab, 0x0a, 0x48,
	0xac, 0x33, 0x68, 0xd8, 0xa0, 0x4d, 0x47, 0x4f, 0x2b, 0x63, 0xaa, 0x06, 0x84, 0xb4, 0x4a, 0x48,
	0xad, 0x0d, 0x4a, 0x54, 0x46, 0xfb, 0x8d, 0x62, 0xf4, 0x2c, 0x7e, 0x8a, 0xb3, 0x0a, 0xf4, 0x99,
	0xbf, 0x97, 0x55, 0x05, 0x4e, 0x18, 0x1b, 0x15, 0x7f, 0x51, 0x9f, 0x6c, 0x6b, 0xc5, 0x68, 0x19,
	0x6e, 0x44, 0x2b, 0x1b, 0x55, 0x4a, 0xdc, 0xf2, 0xc6, 0x77, 0x94, 0x5e, 0x43, 0xc8, 0xe1, 0x2e,
	0x80, 0x47, 0x56, 0xd0, 0x43, 0xa5, 0x6d, 0xc0, 0xd7, 0xb0, 0xc2, 0x27, 0x84, 0x93, 0xd3, 0xc3,
	0xc5, 0xf3, 0x75, 0x36, 0x9f, 0xf4, 0xaf, 0xd3, 0x04, 0x61, 0x85, 0x1c, 0x0d, 0x5f, 0x02, 0x77,
	0x80, 0xc1, 0x69, 0x28, 0xb9, 0xd2, 0xdc, 0x81, 0x35, 0xda, 0x03, 0x97, 0xd6, 0x82, 0x2e, 0x95,
	0xae, 0xf8, 0x4b, 0x68, 0x1a, 0xf3, 0x73, 0xb1, 0xef, 0x06, 0x43, 0x92, 0xf7, 0x15, 0xc6, 0x0d,
	0x3d, 0x8a, 0x48, 0x1f, 0x13, 0xd8, 0x3b, 0x7a, 0xb4, 0xcd, 0xdd, 0xa1, 0xce, 0xd7, 0xd9, 0xe5,
	0xe4, 0xd8, 0x6d, 0x35, 0x11, 0x7c, 0x1a, 0xc1, 0xff, 0x80, 0xcc, 0x77, 0xeb, 0x4d, 0x3f, 0x93,
	0x38, 0xe1, 0xab, 0x8d, 0xcb, 0xec, 0x23, 0xa1, 0xc7, 0x2f, 0x00, 0xa3, 0xb0, 0xfb, 0xcf, 0xfe,
	0x4f, 0xda, 0x34, 0xe9, 0x2d, 0x18, 0x3d, 0xfa, 0x1d, 0x6f, 0xd8, 0xe3, 0x37, 0xeb, 0xec, 0x8a,
	0x5d, 0x66, 0x9a, 0x83, 0x2e, 0xad, 0x51, 0x1a, 0x79, 0xf0, 0x50, 0x76, 0x0e, 0x94, 0x80, 0xe0,
	0x6e, 0x95, 0x06, 0x8e, 0x35, 0xf0, 0x1a, 0x64, 0x83, 0x35, 0x37, 0x37, 0x31, 0x7a, 0xd8, 0xea,
	0x87, 0xef, 0x3f, 0x3e, 0x0d, 0x18, 0x1b, 0x8a, 0x36, 0x15, 0x15, 0x60, 0xdd, 0x71, 0xbb, 0x41,
	0x16, 0xdf, 0xc8, 0x3a, 0xfb, 0x42, 0xd8, 0xc5, 0x6e, 0x77, 0x63, 0x4e, 0x4f, 0x2a, 0x85, 0x75,
	0x58, 0x26, 0x85, 0xb9, 0x15, 0xd7, 0x10, 0x4a, 0xf0, 0xaa, 0x10, 0xbd, 0x62, 0xba, 0x77, 0x9e,
	0xa4, 0x13, 0x42, 0xa6, 0x43, 0x69, 0x6d, 0xa3, 0x8a, 0xb8, 0x6b, 0xf1, 0xde, 0x1b, 0x7d, 0xf5,
	0xc7, 0x4b, 0x3e, 0xa7, 0x7b, 0xb3, 0xf3, 0x19, 0x9b, 0xd1, 0x49, 0xfe, 0xe0, 0xda, 0x7d, 0x0d,
	0x3a, 0xf6, 0xe7, 0xc0, 0x9b, 0xe0, 0x0a, 0xe0, 0xa5, 0x01, 0xcf, 0xb5, 0x41, 0x0e, 0x2b, 0xe5,
	0x31, 0x61, 0x07, 0x74, 0xff, 0xeb, 0x80, 0xfc, 0xf7, 0xf6, 0x71, 0x77, 0x7d, 0xfd, 0x79, 0x8a,
	0x36, 0x5d, 0x1e, 0xc4, 0x93, 0xb9, 0xf8, 0x15, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x9c, 0x6f, 0xc2,
	0xb6, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NeuServiceClient is the client API for NeuService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NeuServiceClient interface {
	GetHelloText(ctx context.Context, in *NeuRequest, opts ...grpc.CallOption) (*NeuResponse, error)
}

type neuServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNeuServiceClient(cc grpc.ClientConnInterface) NeuServiceClient {
	return &neuServiceClient{cc}
}

func (c *neuServiceClient) GetHelloText(ctx context.Context, in *NeuRequest, opts ...grpc.CallOption) (*NeuResponse, error) {
	out := new(NeuResponse)
	err := c.cc.Invoke(ctx, "/v1.NeuService/GetHelloText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NeuServiceServer is the server API for NeuService service.
type NeuServiceServer interface {
	GetHelloText(context.Context, *NeuRequest) (*NeuResponse, error)
}

// UnimplementedNeuServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNeuServiceServer struct {
}

func (*UnimplementedNeuServiceServer) GetHelloText(ctx context.Context, req *NeuRequest) (*NeuResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHelloText not implemented")
}

func RegisterNeuServiceServer(s *grpc.Server, srv NeuServiceServer) {
	s.RegisterService(&_NeuService_serviceDesc, srv)
}

func _NeuService_GetHelloText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NeuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NeuServiceServer).GetHelloText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.NeuService/GetHelloText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NeuServiceServer).GetHelloText(ctx, req.(*NeuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NeuService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.NeuService",
	HandlerType: (*NeuServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHelloText",
			Handler:    _NeuService_GetHelloText_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "neuservice.proto",
}
